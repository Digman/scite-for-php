####################################################################################################
####################################################################################################
## 词法
####################################################################################################
####################################################################################################

# 是否允许 $ 做为标志符（为 javascript 定制的？）
lexer.cpp.allow.dollars=1
# 在预处理文本内是否样式化
styling.within.preprocessor=1
# 注释启用折叠
fold.comment=1
# } else { 处启用折叠
fold.at.else=1
# 预处理语句启用折叠
fold.preprocessor=1

# 只有 braces.cpp.style 这个 style 号（默认为 0）能用于括号匹配高亮
braces.cpp.style=10

# 自动补全是否忽略大小写
autocomplete.cpp.ignorecase=1
# 启动自动补全功能的字符
autocomplete.cpp.start.characters=.
# 完成自动补全的字符
autocomplete.cpp.fillups=(

# API 提示是否忽略大小写
calltip.cpp.ignorecase=1
# API 提示里被认成单词的字符集合
calltip.cpp.word.characters=$(chars.alnum)_.
# API 提示里代表参数开始的字符
calltip.cpp.parameters.start=(
# API 提示里代表参数结尾的字符
calltip.cpp.parameters.end=)
# API 提示里代表参数分隔的字符
calltip.cpp.parameters.separators=,
# 终止 API 提示的字符。API 注释可以写在该字符后面，以显示在第二行
calltip.cpp.end.definition=)

# 注释相关
comment.block.cpp=//
comment.block.at.line.start.cpp=1
comment.stream.start.cpp=/*
comment.stream.end.cpp=*/
comment.box.start.cpp=/**
comment.box.middle.cpp= *
comment.box.end.cpp= */

####################################################################################################
####################################################################################################
## 语言
####################################################################################################
####################################################################################################

# c
import lang/c/c
# cxx
import lang/cxx/cxx
# java
import lang/java/java
# javascript
import lang/javascript/javascript
