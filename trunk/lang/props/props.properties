####################################################################################################
####################################################################################################
## 词法
####################################################################################################
####################################################################################################

# ？？？
#lexer.props.allow.initial.spaces=0

# 只有 braces.props.style 这个 style 号（默认为 0）能用于括号匹配高亮
#braces.props.style=

# 自动补全是否忽略大小写
#autocomplete.props.ignorecase=
# 启动自动补全功能的字符
#autocomplete.props.start.characters=
# 完成自动补全的字符
#autocomplete.props.fillups=

# API 提示是否忽略大小写
#calltip.props.ignorecase=
# API 提示里被认成单词的字符集合
#calltip.props.word.characters=
# API 提示里代表参数开始的字符
#calltip.props.parameters.start=
# API 提示里代表参数结尾的字符
#calltip.props.parameters.end=
# API 提示里代表参数分隔的字符
#calltip.props.parameters.separators=
# 终止 API 提示的字符。API 注释可以写在该字符后面，以显示在第二行
#calltip.props.end.definition=

# 注释相关
comment.block.props=#
comment.block.at.line.start.props=1
#comment.stream.start.props=
#comment.stream.end.props=
#comment.box.start.props=
#comment.box.middle.props=
#comment.box.end.props=

####################################################################################################
####################################################################################################
## 语言
####################################################################################################
####################################################################################################

# 语言文件定义
file.patterns.props=*.properties;*.ini;*.iface
# 标志符定义
word.characters.$(file.patterns.props)=$(chars.alnum)_-.
# 空白符定义
#whitespace.characters.$(file.patterns.props)=
# 1 只在真实的缩进空白内显示缩进向导，2 根据下一个非空行显示缩进向导，3 根据前一个和后一个非空行显示缩进向导
#view.indentation.examine.$(file.patterns.props)=
# 文件的默认打开路径
#openpath.$(file.patterns.props)=
# 打开文件的后缀
#open.suffix.$(file.patterns.props)=
# 缩写
abbreviations.$(file.patterns.props)=$(SciteDefaultHome)/lang/props/props.abbrev
# API
api.$(file.patterns.props)=$(SciteDefaultHome)/lang/props/props.api
# 词法
lexer.$(file.patterns.props)=props
# 词法路径
#lexerpath.$(file.patterns.props)=
# 关键字
keywords.$(file.patterns.props)=$(keywordclass.props)
#keywords2.$(file.patterns.props)=
#keywords3.$(file.patterns.props)=
#keywords4.$(file.patterns.props)=
#keywords5.$(file.patterns.props)=
#keywords6.$(file.patterns.props)=
#keywords7.$(file.patterns.props)=
#keywords8.$(file.patterns.props)=
#keywords9.$(file.patterns.props)=
# 预处理
#preprocessor.symbol.$(file.patterns.props)
#preprocessor.start.$(file.patterns.props)
#preprocessor.middle.$(file.patterns.props)
#preprocessor.end.$(file.patterns.props)
# 命令
#command.compile.$(file.patterns.props)=
#command.compile.subsystem.$(file.patterns.props)=
#command.build.$(file.patterns.props)=
#command.build.subsystem.$(file.patterns.props)=
#command.build.directory.$(file.patterns.props)=
#command.go.$(file.patterns.props)=
#command.go.subsystem.$(file.patterns.props)=
#command.go.needs.$(file.patterns.props)=
#command.go.needs.subsystem.$(file.patterns.props)=
# 第 {number} 个命令名称
#command.name.{number}.$(file.patterns.props)=
# 第 {number} 个命令
#command.{number}.$(file.patterns.props)=
#command.is.filter.{number}.$(file.patterns.props)=
# 第 {number} 个命令所在的子系统
#command.subsystem.{number}.$(file.patterns.props)=
# 执行第 {number} 个命令之前是否保存
#command.save.before.{number}.$(file.patterns.props)=
#command.input.{number}.$(file.patterns.props)=
#command.replace.selection.{number}.$(file.patterns.props)=
#command.quiet.{number}.$(file.patterns.props)=
#command.mode.{number}.$(file.patterns.props)=
# 给第 {number} 个命令定义快捷键，如：Ctrl+1，默认 Ctrl+1 到 Ctrl+9 被定义给 1 到 9 号命令
#command.shortcut.{number}.$(file.patterns.props)=
#command.help.$(file.patterns.props)=
#command.help.subsystem.$(file.patterns.props)=
# 缩进相关
#tab.size.$(file.patterns.props)=
#indent.size.$(file.patterns.props)=
#use.tabs.$(file.patterns.props)=
#indent.maintain.$(file.patterns.props)=
# 决定下一行是否要缩进的词素集合定义
#statement.indent.$(file.patterns.props)=
# 决定当前行是否要终止下一行的缩进的结尾符集合定义
#statement.end.$(file.patterns.props)=
# 往回看几行以决定语句的缩进，设为 1 行，对 C、PHP 之类的语言有意义：if (true)\n break; 之后恢复缩进
#statement.lookback.$(file.patterns.props)=
# 一个组合语句块的起始词素集合定义
#block.start.$(file.patterns.props)=
# 一个组合语句块的结尾词素集合定义
#block.end.$(file.patterns.props)=
# 各语言的扩展（目前只支持 Lua）
extension.$(file.patterns.props)=$(SciteDefaultHome)/lang/props/props.lua
