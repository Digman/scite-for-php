# Lua Abbreviations

#New script file
1=--[[--------------------------------------------------\nScriptName.lua\nAuthors: |\nVersion: 1.0\n------------------------------------------------------\nDescription:\n\n------------------------------------------------------\nConnection:\n In file SciTEStartup.lua add a line:\n    \n Set in a file .properties:\n    \n--]]--------------------------------------------------\n

#Code Snippets
if=if x ~= 0 then\n\t|\nend
for=for i = _start, _end, _step do\n\t|\nend\n
while=while x ~= 0 do\n\t\nend\n
rep=repeat\n\t\nuntil x == 0\n
tabf=for param, value in pairs(tbl) do\n\t|\nend\n
tabs=table.sort(table_name, function(a, b) return a:upper() < b:upper() end)\n
gmatch=for w in string.gmatch(s, "%a+") do\n\t|\nend\n
gmatch=for p, v in string.gmatch(s, "(%w+)=(%w+)") do\n\t|\nend\n

#Functions
tabprint=-- Print Table Content\ntable.foreach(tbl, print)\n
tabshow=-- Show Table Content\nlocal function print_table(tbl, tbl_name)\n\tif tbl_name == nil then tbl_name = '.' end\n\tfor fields, value in pairs(tbl) do\n\t\tif type(fields)=='string' then fields = "'"..fields.."'" end\n\t\tif type(value) == "table" then\n\t\t\tprint("+", tbl_name.."["..fields.."] =", value)\n\t\t\tprint_table(value, tbl_name.."["..fields.."]")\n\t\telse\n\t\t\tprint("-", tbl_name.."["..fields.."] =", value)\n\t\tend\n\tend\nend\n
fileread=-- Reading all content from file\nlocal function file_read_all(filename)\n\tlocal text = ''\n\tlocal file = io.open(filename)\n\tif file then\n\t\ttext = file:read("*a")\n\t\tfile:close()\n\tend\n\treturn text\nend\n
file2table=-- Reading file to table\nlocal function file_read(filename)\n\tlocal table_lines = {}\n\tlocal file = io.open(filename)\n\tif file then\n\t\tfor line in file:lines() do\n\t\t\ttable_lines[#table_lines+1] = line\n\t\tend\n\t\tfile:close()\n\tend\n\treturn table_lines\nend\n
filewrite=-- Write file\nlocal function file_write(filename, text)\n\tio.output(filename)\n\tio.write(text)\n\tio.close()\nend\n

#Event handlers
onopen=-- Add user event handler OnOpen\nlocal old_OnOpen = OnOpen\nfunction OnOpen(file)\n\tlocal result\n\tif old_OnOpen then result = old_OnOpen(file) end\n\tif |MyFunction(file) then return true end\n\treturn result\nend
onswitchfile=-- Add user event handler OnSwitchFile\nlocal old_OnSwitchFile = OnSwitchFile\nfunction OnSwitchFile(file)\n\tlocal result\n\tif old_OnSwitchFile then result = old_OnSwitchFile(file) end\n\tif |MyFunction(file) then return true end\n\treturn result\nend
onbeforesave=-- Add user event handler OnBeforeSave\nlocal old_OnBeforeSave = OnBeforeSave\nfunction OnBeforeSave(file)\n\tlocal result\n\tif old_OnBeforeSave then result = old_OnBeforeSave(file) end\n\tif |MyFunction(file) then return true end\n\treturn result\nend
onsave=-- Add user event handler OnSave\nlocal old_OnSave = OnSave\nfunction OnSave(file)\n\tlocal result\n\tif old_OnSave then result = old_OnSave(file) end\n\tif |MyFunction(file) then return true end\n\treturn result\nend
onchar=-- Add user event handler OnChar\nlocal old_OnChar = OnChar\nfunction OnChar(char)\n\tlocal result\n\tif old_OnChar then result = old_OnChar(char) end\n\tif |MyFunction(char) then return true end\n\treturn result\nend
onexecute=-- Add user event handler OnExecute\nlocal old_OnExecute = OnExecute\nfunction OnExecute(cmd)\n\tlocal result\n\tif old_OnExecute then result = old_OnExecute(cmd) end\n\tif |MyFunction(cmd) then return true end\n\treturn result\nend
onsavepointreached=-- Add user event handler OnSavePointReached\nlocal old_OnSavePointReached = OnSavePointReached\nfunction OnSavePointReached ()\n\tlocal result\n\tif old_OnSavePointReached then result = old_OnSavePointReached() end\n\tif props['FileExt'] == 'properties' then\n\t\tif |MyFunction() then return true end\n\tend\n\treturn result\nend
onsavepointleft=-- Add user event handler OnSavePointLeft\nlocal old_OnSavePointLeft = OnSavePointLeft\nfunction OnSavePointLeft ()\n\tlocal result\n\tif old_OnSavePointLeft then result = old_OnSavePointLeft() end\n\tif props['FileExt'] == 'properties' then\n\t\tif |MyFunction() then return true end\n\tend\n\treturn result\nend
onstyle=-- Add user event handler OnStyle\nlocal old_OnStyle = OnStyle\nfunction OnStyle(styler)\n  local result\n  if old_OnStyle then result = old_OnStyle(styler) end\n  if |MyFunction(styler) then return true end\n  return result\nend
onclick=-- Add user event handler OnClick\nlocal old_OnClick = OnClick\nfunction OnClick(shift, ctrl, alt)\n\tlocal result\n\tif old_OnClick then result = old_OnClick(shift, ctrl, alt) end\n\tif |MyFunction(shift, ctrl, alt) then return true end\n\treturn result\nend
ondoubleclick=-- Add user event handler OnDoubleClick\nlocal old_OnDoubleClick = OnDoubleClick\nfunction OnDoubleClick(shift, ctrl, alt)\n\tlocal result\n\tif old_OnDoubleClick then result = old_OnDoubleClick(shift, ctrl, alt) end\n\tif |MyFunction(shift, ctrl, alt) then return true end\n\treturn result\nend
onmousebuttonup=-- Add user event handler OnMouseButtonUp\nlocal old_OnMouseButtonUp = OnMouseButtonUp\nfunction OnMouseButtonUp(ctrl)\n\tlocal result\n\tif old_OnMouseButtonUp then result = old_OnMouseButtonUp(ctrl) end\n\tif |MyFunction(ctrl) then return true end\n\treturn result\nend
onupdateui=-- Add user event handler OnUpdateUI\nlocal old_OnUpdateUI = OnUpdateUI\nfunction OnUpdateUI ()\n\tlocal result\n\tif old_OnUpdateUI then result = old_OnUpdateUI() end\n\tif props['FileName'] ~= '' then\n\t\tif |MyFunction() then return true end\n\tend\n\treturn result\nend
onuserlistselection=-- Add user event handler OnUserListSelection\nlocal old_OnUserListSelection = OnUserListSelection\nfunction OnUserListSelection(tp,sel_value)\n\tlocal result\n\tif old_OnUserListSelection then result = old_OnUserListSelection(tp,sel_value) end\n\tif tp == 12 then\n\t\tif |MyFunction(sel_value) then return true end\n\tend\n\treturn result\nend
onmarginclick=-- Add user event handler OnMarginClick\nlocal old_OnMarginClick = OnMarginClick\nfunction OnMarginClick ()\n\tlocal result\n\tif old_OnMarginClick then result = old_OnMarginClick() end\n\tif props['FileExt'] == 'properties' then\n\t\tif |MyFunction() then return true end\n\tend\n\treturn result\nend
onmacro=-- Add user event handler OnMacro\nlocal old_OnMacro = OnMacro\nfunction OnMacro (cmd, msg)\n\tlocal result\n\tif old_OnMacro then result = old_OnMacro(cmd, msg) end\n\tif |MyFunction(cmd, msg) then return true end\n\treturn result\nend
onmenucommand=-- Add user event handler OnMenuCommand\nlocal old_OnMenuCommand = OnMenuCommand\nfunction OnMenuCommand (msg, source)\n\tlocal result\n\tif old_OnMenuCommand then result = old_OnMenuCommand(msg, source) end\n\tif msg == IDM_MONOFONT then\n\t\tif |MyFunction() then return true end\n\tend\n\treturn result\nend
onkey=-- Add user event handler OnKey\nlocal old_OnKey = OnKey\nfunction OnKey(key, shift, ctrl, alt, char)\n\tlocal result\n\tif old_OnKey then result = old_OnKey(key, shift, ctrl, alt, char) end\n\tif (editor.Focus) then\n\t\tif |MyFunction(char) then return true end\n\tend\n\treturn result\nend
ondwellstart=-- Add user event handler OnDwellStart\nlocal old_OnDwellStart = OnDwellStart\nfunction OnDwellStart(pos, word)\n\tlocal result\n\tif old_OnDwellStart then result = old_OnDwellStart(pos, word) end\n\tif |MyFunction(pos, word) then return true end\n\treturn result\nend
onclose=-- Add user event handler OnClose\nlocal old_OnClose = OnClose\nfunction OnClose(file)\n\tlocal result\n\tif old_OnClose then result = old_OnClose(file) end\n\tif |MyFunction(file) then return true end\n\treturn result\nend
onsendeditor=-- Add user event handler OnSendEditor\nlocal old_OnSendEditor = OnSendEditor\nfunction OnSendEditor(id_msg, wp, lp)\n\tlocal result\n\tif old_OnSendEditor then result = old_OnSendEditor(id_msg, wp, lp) end\n\tif id_msg == SCI_SETREADONLY then\n\t\tif |MyFunction(wp~=0) then return true end\n\tend\n\treturn result\nend
onfinalise=-- Add user event handler OnFinalise\nlocal old_OnFinalise = OnFinalise\nfunction OnFinalise()\n\tlocal result\n\tif old_OnFinalise then result = old_OnFinalise() end\n\tif props['FileName'] ~= '' then\n\t\tif MyFunction() then return true end\n\tend\n\treturn result\nend